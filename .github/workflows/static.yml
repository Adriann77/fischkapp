# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# ... (other parts of the workflow)

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build # or the appropriate build command for your project

      - name: Test
        run: npm test # or the appropriate test command for your project

      - name: Debug
        run: |
          echo "Current directory: $(pwd)"
          echo "Contents of the current directory: $(ls -a)"
          echo "Contents of the build directory: $(ls -a build)"

      - name: Deploy
        if: success()
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

          # Create gh-pages branch if it doesn't exist
          git checkout -B gh-pages

          # Remove existing contents in gh-pages branch
          git rm -rf .

          # Copy contents from the build directory to the gh-pages branch
          cp -r build/* .

          # Commit and push changes
          git add .
          git commit -m "Deploy from GitHub Actions"
          git push origin gh-pages
